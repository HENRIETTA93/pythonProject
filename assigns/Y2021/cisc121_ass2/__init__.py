# 2021年7月18日 #
'''
在此作业中，您将获得在给定实际问题陈述和应用程序的情况下规划程序解决方案结构的经验。对于本作业的这一部分，您将进行规划，然后描述解决下面概述的问题的程序的结构。在这个阶段，您编写代码 - 只是计划。在作业的第二部分，您将根据您部分开发的计划为您的程序编写代码。
问题陈述：在本作业中，您的任务是构建市政呼叫中心记录系统的控制台版本。斯普林菲尔德市每天都会接到数百个来自客户的电话——有些是赞美，有些是抱怨。过去，他们使用纸张来跟踪这些信息，但由于纸张价格飞涨（更不用说环境成本了！），市政当局聘请您为他们建造一个计算机系统，该系统将跟踪呼叫并从以下位置检索信息数据库。
模块化设计：在本作业中，您将通过使用模块将该程序的功能划分为单独的单元来设计和编写程序的结构。未划分模块的程序将获得最低分。
数据：您将获得一个数据文件，该文件提供了市政府从公众那里收到的一些信件的日志。数据对应工件的每一行（即电子邮件、电话、社交媒体消息）。该数据集不是他们收到的所有电话的详尽列表，而是对他们的各种通信日志的大量抽样。数据集的列（或特征）如下：
识别号（5 位整数） - 呼叫的唯一标识符。
部门（字符串）- 负责跟进电话的部门。
priority (int) - 1 到 5 范围内的整数，表示呼叫的优先级（紧急程度）。 1 是最低优先级，5 是最高优先级。
呼叫类型（字符串） - 投诉或积极的反馈。
resolution (boolean) - 如果问题已解决，则为 True，否则为 False。
通信源（字符串）- 是否通过电话、电子邮件、社交媒体收到信件。
软件的功能：您的团队成员咨询了斯普林菲尔德市进行利益相关者分析，以确定每个利益相关者希望在最终产品中包含哪些特性和功能。以下是他们发现的记录：
1. 数据输入：您的程序最初将把逗号分隔 (CSV) 文件中的数据读入适当的数据结构（可能是字典列表？选择权取决于您作为程序员）。文件名将始终相同。这意味着 CSV 文件的文件名 c
硬编码到你的程序中。所有更新都是对数据结构进行的 - 而不是 CSV 文件。查看此资源以获取有关读取 CSV 文件 Python 程序的提示。
2. 创建新记录：您的程序应允许用户向数据库添加新调用。将新调用添加到数据库时，请记住将其添加到您选择用于组织信息的数据结构（即列表）中。应提示用户输入所有必需的信息：标识号、部门、优先级、呼叫类型、解决状态和通信源。


3. 检索和显示记录：用户应该能够通过呼叫识别号码、部门、优先级、呼叫类型（投诉或赞美）或解决状态搜索记录。找到一条或多条匹配记录后，应将这些记录的所有信息打印到控制台。以下是所需检索和显示操作的概述：
应该有一个选项可以显示系统中所有调用的所有信息 - 没有基于属性的过滤。
应该有一个选项可以按给定的标识号、部门、优先级、呼叫类型、解决状态或公共方法列出所有呼叫。
例如，如果用户选择按“部门”搜索并输入“道路”，则与道路部门相关联的每个呼叫的所有信息（标识号、部门优先级、呼叫类型）都将打印到控制台。
4. 更新记录：您的程序应允许用户对车辆信息进行以下更改。首先，应该提示用户他们想要更新的呼叫的唯一标识号。然后，提示用户指出他们将要使用的字段（或属性）
通过输入新信息进行更新。
更新与呼叫关联的部门名称
更新优先级。
更新呼叫类型。
更新分辨率类型。
更新通讯方式。
注意：您的程序应该直接在您选择使用的数据结构中反映与调用信息相关的任何更改。每次更新或添加数据结构后，您的程序不需要重新写入 CSV。欢迎您将此功能添加为额外的（值得的！）练习练习。
5. 删除记录：给定一个唯一的呼叫识别号，程序应该从数据结构中删除整个记录，以便与识别号相关联的呼叫。呼叫将保留在 CSV 文件中。
6. 输出：用户应该可以选择将呼叫列表写入文本文件。如果用户选择将信息写入文本文件，您应该提示用户输入他们希望“写入”信息的文件名。如果用户请求将呼叫列表写入自程序启动以来对数据结构进行的文本更新（编辑、添加或删除），并且数据最初被读入数据，现在将反映在文本文件中。
'''
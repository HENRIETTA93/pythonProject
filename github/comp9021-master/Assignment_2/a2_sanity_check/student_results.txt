{
    "testcases": [
        {
            "name": "Test 1 run as: python3 -c \"from maze import *; Maze('incorrect_input_1.txt')\"",
            "ok": true,
            "passed": false,
            "observed": "Too much output\\n",
            "expected": "Traceback (most recent call last):\\n  File \"<string>\", line 1, in <module>\\n  File \"/Users/rhamadi/Documents/COMP9021/Assignments/Assignment 2/Submissions/2286838/maze.py\", line 100, in __init__\\n    self.get_input(file)\\n  File \"/Users/rhamadi/Documents/COMP9021/Assignments/Assignment 2/Submissions/2286838/maze.py\", line 179, in get_input\\n    raise MazeError('Incorrect input.')\\nmaze.MazeError: Incorrect input.\\n"
        },
        {
            "name": "Test 2 run as: python3 -c \"from maze import *; Maze('incorrect_input_2.txt')\"",
            "ok": true,
            "passed": false,
            "observed": "Too much output\\n",
            "expected": "Traceback (most recent call last):\\n  File \"<string>\", line 1, in <module>\\n  File \"/Users/rhamadi/Documents/COMP9021/Assignments/Assignment 2/Submissions/2286838/maze.py\", line 100, in __init__\\n    self.get_input(file)\\n  File \"/Users/rhamadi/Documents/COMP9021/Assignments/Assignment 2/Submissions/2286838/maze.py\", line 173, in get_input\\n    raise MazeError('Incorrect input.')\\nmaze.MazeError: Incorrect input.\\n"
        },
        {
            "name": "Test 3 run as: python3 -c \"from maze import *; Maze('not_a_maze_1.txt')\"",
            "ok": true,
            "passed": false,
            "observed": "Too much output\\n",
            "expected": "Traceback (most recent call last):\\n  File \"<string>\", line 1, in <module>\\n  File \"/Users/rhamadi/Documents/COMP9021/Assignments/Assignment 2/Submissions/2286838/maze.py\", line 100, in __init__\\n    self.get_input(file)\\n  File \"/Users/rhamadi/Documents/COMP9021/Assignments/Assignment 2/Submissions/2286838/maze.py\", line 181, in get_input\\n    raise MazeError('Input does not represent a maze.')\\nmaze.MazeError: Input does not represent a maze.\\n"
        },
        {
            "name": "Test 4 run as: python3 -c \"from maze import *; Maze('not_a_maze_2.txt')\"",
            "ok": true,
            "passed": false,
            "observed": "Too much output\\n",
            "expected": "Traceback (most recent call last):\\n  File \"<string>\", line 1, in <module>\\n  File \"/Users/rhamadi/Documents/COMP9021/Assignments/Assignment 2/Submissions/2286838/maze.py\", line 100, in __init__\\n    self.get_input(file)\\n  File \"/Users/rhamadi/Documents/COMP9021/Assignments/Assignment 2/Submissions/2286838/maze.py\", line 183, in get_input\\n    raise MazeError('Input does not represent a maze.')\\nmaze.MazeError: Input does not represent a maze.\\n"
        },
        {
            "name": "Test 5 run as: python3 -c \"from maze import *; maze = Maze('maze_1.txt'); maze.analyse()\"",
            "ok": true,
            "passed": false,
            "observed": "Too much output\\n",
            "expected": "The maze has 12 gates.\\nThe maze has 8 sets of walls that are all connected.\\nThe maze has 2 inaccessible inner points.\\nThe maze has 4 accessible areas.\\nThe maze has 3 sets of accessible cul-de-sacs that are all connected.\\nThe maze has a unique entry-exit path with no intersection not to cul-de-sacs.\\n"
        },
        {
            "name": "Test 6 run as: python3 -c \"from maze import *; maze = Maze('maze_2.txt'); maze.analyse()\"",
            "ok": true,
            "passed": false,
            "observed": "Too much output\\n",
            "expected": "The maze has 20 gates.\\nThe maze has 4 sets of walls that are all connected.\\nThe maze has 4 inaccessible inner points.\\nThe maze has 13 accessible areas.\\nThe maze has 11 sets of accessible cul-de-sacs that are all connected.\\nThe maze has 5 entry-exit paths with no intersections not to cul-de-sacs.\\n"
        },
        {
            "name": "Test 7 run as: python3 -c \"from maze import *; maze = Maze('labyrinth.txt'); maze.analyse()\"",
            "ok": true,
            "passed": false,
            "observed": "Too much output\\n",
            "expected": "The maze has 2 gates.\\nThe maze has 2 sets of walls that are all connected.\\nThe maze has no inaccessible inner point.\\nThe maze has a unique accessible area.\\nThe maze has 8 sets of accessible cul-de-sacs that are all connected.\\nThe maze has a unique entry-exit path with no intersection not to cul-de-sacs.\\n"
        },
        {
            "name": "Test 8 run as: python3 -c \"from maze import *; maze = Maze('maze_1.txt'); maze.display()\"; cat maze_1.tex",
            "ok": true,
            "passed": false,
            "observed": "Too much output\\n",
            "expected": "\\documentclass[10pt]{article}\\n\\usepackage{tikz}\\n\\usetikzlibrary{shapes.misc}\\n\\usepackage[margin=0cm]{geometry}\\n\\pagestyle{empty}\\n\\tikzstyle{every node}=[cross out, draw, red]\\n\\n\\begin{document}\\n\\n\\vspace*{\\fill}\\n\\begin{center}\\n\\begin{tikzpicture}[x=0.5cm, y=-0.5cm, ultra thick, blue]\\n% Walls\\n    \\draw (0,0) -- (1,0);\\n    \\draw (4,0) -- (5,0);\\n    \\draw (6,0) -- (7,0);\\n    \\draw (0,1) -- (1,1);\\n    \\draw (3,1) -- (4,1);\\n    \\draw (0,2) -- (1,2);\\n    \\draw (2,2) -- (6,2);\\n    \\draw (2,3) -- (3,3);\\n    \\draw (5,3) -- (6,3);\\n    \\draw (0,4) -- (1,4);\\n    \\draw (4,4) -- (5,4);\\n    \\draw (6,4) -- (7,4);\\n    \\draw (0,5) -- (1,5);\\n    \\draw (3,5) -- (5,5);\\n    \\draw (0,1) -- (0,5);\\n    \\draw (1,1) -- (1,2);\\n    \\draw (1,4) -- (1,5);\\n    \\draw (2,0) -- (2,2);\\n    \\draw (2,3) -- (2,5);\\n    \\draw (3,0) -- (3,1);\\n    \\draw (4,1) -- (4,3);\\n    \\draw (5,0) -- (5,1);\\n    \\draw (5,4) -- (5,5);\\n    \\draw (6,0) -- (6,2);\\n    \\draw (6,3) -- (6,5);\\n    \\draw (7,1) -- (7,2);\\n    \\draw (7,4) -- (7,5);\\n% Pillars\\n    \\fill[green] (1,3) circle(0.2);\\n    \\fill[green] (7,3) circle(0.2);\\n    \\fill[green] (3,4) circle(0.2);\\n% Inner points in accessible cul-de-sacs\\n    \\node at (2.5,0.5) {};\\n    \\node at (2.5,1.5) {};\\n    \\node at (3.5,1.5) {};\\n    \\node at (4.5,4.5) {};\\n    \\node at (6.5,4.5) {};\\n% Entry-exit paths without intersections\\n    \\draw[dashed, yellow] (3.5,0.5) -- (4.5,0.5);\\n    \\draw[dashed, yellow] (4.5,1.5) -- (5.5,1.5);\\n    \\draw[dashed, yellow] (3.5,-0.5) -- (3.5,0.5);\\n    \\draw[dashed, yellow] (4.5,0.5) -- (4.5,1.5);\\n    \\draw[dashed, yellow] (5.5,-0.5) -- (5.5,1.5);\\n\\end{tikzpicture}\\n\\end{center}\\n\\vspace*{\\fill}\\n\\n\\end{document}\\n"
        },
        {
            "name": "Test 9 run as: python3 -c \"from maze import *; maze = Maze('maze_2.txt'); maze.display()\"; cat maze_2.tex",
            "ok": true,
            "passed": false,
            "observed": "Too much output\\n",
            "expected": "\\documentclass[10pt]{article}\\n\\usepackage{tikz}\\n\\usetikzlibrary{shapes.misc}\\n\\usepackage[margin=0cm]{geometry}\\n\\pagestyle{empty}\\n\\tikzstyle{every node}=[cross out, draw, red]\\n\\n\\begin{document}\\n\\n\\vspace*{\\fill}\\n\\begin{center}\\n\\begin{tikzpicture}[x=0.5cm, y=-0.5cm, ultra thick, blue]\\n% Walls\\n    \\draw (3,0) -- (4,0);\\n    \\draw (6,0) -- (7,0);\\n    \\draw (5,1) -- (9,1);\\n    \\draw (10,1) -- (11,1);\\n    \\draw (0,2) -- (1,2);\\n    \\draw (2,2) -- (4,2);\\n    \\draw (6,2) -- (8,2);\\n    \\draw (9,2) -- (10,2);\\n    \\draw (0,3) -- (2,3);\\n    \\draw (3,3) -- (4,3);\\n    \\draw (7,3) -- (8,3);\\n    \\draw (9,3) -- (11,3);\\n    \\draw (2,4) -- (3,4);\\n    \\draw (6,4) -- (7,4);\\n    \\draw (0,1) -- (0,4);\\n    \\draw (1,0) -- (1,2);\\n    \\draw (2,0) -- (2,2);\\n    \\draw (2,3) -- (2,4);\\n    \\draw (3,0) -- (3,4);\\n    \\draw (4,1) -- (4,4);\\n    \\draw (5,0) -- (5,4);\\n    \\draw (6,3) -- (6,4);\\n    \\draw (7,0) -- (7,1);\\n    \\draw (7,2) -- (7,4);\\n    \\draw (8,3) -- (8,4);\\n    \\draw (9,0) -- (9,1);\\n    \\draw (9,2) -- (9,4);\\n    \\draw (10,0) -- (10,2);\\n    \\draw (10,3) -- (10,4);\\n    \\draw (11,0) -- (11,3);\\n% Pillars\\n    \\fill[green] (0,0) circle(0.2);\\n    \\fill[green] (8,0) circle(0.2);\\n    \\fill[green] (1,4) circle(0.2);\\n    \\fill[green] (11,4) circle(0.2);\\n% Inner points in accessible cul-de-sacs\\n    \\node at (1.5,0.5) {};\\n    \\node at (2.5,0.5) {};\\n    \\node at (3.5,0.5) {};\\n    \\node at (5.5,0.5) {};\\n    \\node at (6.5,0.5) {};\\n    \\node at (10.5,0.5) {};\\n    \\node at (0.5,1.5) {};\\n    \\node at (1.5,1.5) {};\\n    \\node at (2.5,1.5) {};\\n    \\node at (3.5,1.5) {};\\n    \\node at (0.5,2.5) {};\\n    \\node at (1.5,2.5) {};\\n    \\node at (2.5,2.5) {};\\n    \\node at (6.5,2.5) {};\\n    \\node at (7.5,2.5) {};\\n    \\node at (2.5,3.5) {};\\n    \\node at (3.5,3.5) {};\\n    \\node at (6.5,3.5) {};\\n    \\node at (7.5,3.5) {};\\n    \\node at (9.5,3.5) {};\\n% Entry-exit paths without intersections\\n    \\draw[dashed, yellow] (-0.5,0.5) -- (0.5,0.5);\\n    \\draw[dashed, yellow] (7.5,0.5) -- (8.5,0.5);\\n    \\draw[dashed, yellow] (0.5,3.5) -- (1.5,3.5);\\n    \\draw[dashed, yellow] (10.5,3.5) -- (11.5,3.5);\\n    \\draw[dashed, yellow] (0.5,-0.5) -- (0.5,0.5);\\n    \\draw[dashed, yellow] (0.5,3.5) -- (0.5,4.5);\\n    \\draw[dashed, yellow] (1.5,3.5) -- (1.5,4.5);\\n    \\draw[dashed, yellow] (4.5,-0.5) -- (4.5,4.5);\\n    \\draw[dashed, yellow] (7.5,-0.5) -- (7.5,0.5);\\n    \\draw[dashed, yellow] (8.5,-0.5) -- (8.5,0.5);\\n    \\draw[dashed, yellow] (10.5,3.5) -- (10.5,4.5);\\n\\end{tikzpicture}\\n\\end{center}\\n\\vspace*{\\fill}\\n\\n\\end{document}\\n"
        },
        {
            "name": "Test 10 run as: python3 -c \"from maze import *; maze = Maze('labyrinth.txt'); maze.display()\"; cat labyrinth.tex",
            "ok": true,
            "passed": false,
            "observed": "Too much output\\n",
            "expected": "\\documentclass[10pt]{article}\\n\\usepackage{tikz}\\n\\usetikzlibrary{shapes.misc}\\n\\usepackage[margin=0cm]{geometry}\\n\\pagestyle{empty}\\n\\tikzstyle{every node}=[cross out, draw, red]\\n\\n\\begin{document}\\n\\n\\vspace*{\\fill}\\n\\begin{center}\\n\\begin{tikzpicture}[x=0.5cm, y=-0.5cm, ultra thick, blue]\\n% Walls\\n    \\draw (0,0) -- (10,0);\\n    \\draw (1,1) -- (3,1);\\n    \\draw (5,1) -- (8,1);\\n    \\draw (0,2) -- (2,2);\\n    \\draw (4,2) -- (5,2);\\n    \\draw (8,2) -- (10,2);\\n    \\draw (2,3) -- (4,3);\\n    \\draw (6,3) -- (9,3);\\n    \\draw (0,4) -- (2,4);\\n    \\draw (3,4) -- (6,4);\\n    \\draw (1,5) -- (2,5);\\n    \\draw (3,5) -- (4,5);\\n    \\draw (6,5) -- (7,5);\\n    \\draw (8,5) -- (10,5);\\n    \\draw (0,6) -- (1,6);\\n    \\draw (4,6) -- (5,6);\\n    \\draw (6,6) -- (9,6);\\n    \\draw (1,7) -- (3,7);\\n    \\draw (5,7) -- (6,7);\\n    \\draw (7,7) -- (8,7);\\n    \\draw (9,7) -- (10,7);\\n    \\draw (4,8) -- (7,8);\\n    \\draw (8,8) -- (9,8);\\n    \\draw (2,9) -- (4,9);\\n    \\draw (5,9) -- (8,9);\\n    \\draw (0,10) -- (6,10);\\n    \\draw (7,10) -- (10,10);\\n    \\draw (0,0) -- (0,7);\\n    \\draw (0,8) -- (0,10);\\n    \\draw (1,2) -- (1,3);\\n    \\draw (1,7) -- (1,10);\\n    \\draw (2,3) -- (2,4);\\n    \\draw (2,5) -- (2,7);\\n    \\draw (2,8) -- (2,9);\\n    \\draw (3,1) -- (3,3);\\n    \\draw (3,5) -- (3,8);\\n    \\draw (4,1) -- (4,3);\\n    \\draw (4,6) -- (4,9);\\n    \\draw (5,3) -- (5,4);\\n    \\draw (5,5) -- (5,6);\\n    \\draw (5,9) -- (5,10);\\n    \\draw (6,1) -- (6,3);\\n    \\draw (6,4) -- (6,8);\\n    \\draw (7,2) -- (7,4);\\n    \\draw (8,1) -- (8,2);\\n    \\draw (8,4) -- (8,5);\\n    \\draw (8,6) -- (8,9);\\n    \\draw (9,0) -- (9,1);\\n    \\draw (9,3) -- (9,4);\\n    \\draw (9,8) -- (9,9);\\n    \\draw (10,0) -- (10,10);\\n% Pillars\\n% Inner points in accessible cul-de-sacs\\n    \\node at (0.5,0.5) {};\\n    \\node at (1.5,0.5) {};\\n    \\node at (2.5,0.5) {};\\n    \\node at (3.5,0.5) {};\\n    \\node at (4.5,0.5) {};\\n    \\node at (5.5,0.5) {};\\n    \\node at (6.5,0.5) {};\\n    \\node at (7.5,0.5) {};\\n    \\node at (8.5,0.5) {};\\n    \\node at (9.5,0.5) {};\\n    \\node at (0.5,1.5) {};\\n    \\node at (1.5,1.5) {};\\n    \\node at (2.5,1.5) {};\\n    \\node at (3.5,1.5) {};\\n    \\node at (4.5,1.5) {};\\n    \\node at (5.5,1.5) {};\\n    \\node at (6.5,1.5) {};\\n    \\node at (7.5,1.5) {};\\n    \\node at (8.5,1.5) {};\\n    \\node at (9.5,1.5) {};\\n    \\node at (0.5,2.5) {};\\n    \\node at (1.5,2.5) {};\\n    \\node at (2.5,2.5) {};\\n    \\node at (3.5,2.5) {};\\n    \\node at (6.5,2.5) {};\\n    \\node at (7.5,2.5) {};\\n    \\node at (8.5,2.5) {};\\n    \\node at (9.5,2.5) {};\\n    \\node at (0.5,3.5) {};\\n    \\node at (1.5,3.5) {};\\n    \\node at (7.5,3.5) {};\\n    \\node at (8.5,3.5) {};\\n    \\node at (9.5,3.5) {};\\n    \\node at (3.5,4.5) {};\\n    \\node at (4.5,4.5) {};\\n    \\node at (5.5,4.5) {};\\n    \\node at (8.5,4.5) {};\\n    \\node at (9.5,4.5) {};\\n    \\node at (2.5,5.5) {};\\n    \\node at (3.5,5.5) {};\\n    \\node at (4.5,5.5) {};\\n    \\node at (5.5,5.5) {};\\n    \\node at (6.5,5.5) {};\\n    \\node at (2.5,6.5) {};\\n    \\node at (3.5,6.5) {};\\n    \\node at (4.5,6.5) {};\\n    \\node at (5.5,6.5) {};\\n    \\node at (6.5,6.5) {};\\n    \\node at (7.5,6.5) {};\\n    \\node at (1.5,7.5) {};\\n    \\node at (2.5,7.5) {};\\n    \\node at (3.5,7.5) {};\\n    \\node at (4.5,7.5) {};\\n    \\node at (5.5,7.5) {};\\n    \\node at (6.5,7.5) {};\\n    \\node at (7.5,7.5) {};\\n    \\node at (0.5,8.5) {};\\n    \\node at (1.5,8.5) {};\\n    \\node at (2.5,8.5) {};\\n    \\node at (3.5,8.5) {};\\n    \\node at (4.5,8.5) {};\\n    \\node at (5.5,8.5) {};\\n    \\node at (6.5,8.5) {};\\n    \\node at (7.5,8.5) {};\\n    \\node at (8.5,8.5) {};\\n    \\node at (0.5,9.5) {};\\n    \\node at (1.5,9.5) {};\\n    \\node at (2.5,9.5) {};\\n    \\node at (3.5,9.5) {};\\n    \\node at (4.5,9.5) {};\\n    \\node at (5.5,9.5) {};\\n% Entry-exit paths without intersections\\n    \\draw[dashed, yellow] (4.5,2.5) -- (5.5,2.5);\\n    \\draw[dashed, yellow] (2.5,3.5) -- (4.5,3.5);\\n    \\draw[dashed, yellow] (5.5,3.5) -- (6.5,3.5);\\n    \\draw[dashed, yellow] (0.5,4.5) -- (2.5,4.5);\\n    \\draw[dashed, yellow] (6.5,4.5) -- (7.5,4.5);\\n    \\draw[dashed, yellow] (0.5,5.5) -- (1.5,5.5);\\n    \\draw[dashed, yellow] (7.5,5.5) -- (9.5,5.5);\\n    \\draw[dashed, yellow] (0.5,6.5) -- (1.5,6.5);\\n    \\draw[dashed, yellow] (8.5,6.5) -- (9.5,6.5);\\n    \\draw[dashed, yellow] (-0.5,7.5) -- (0.5,7.5);\\n    \\draw[dashed, yellow] (8.5,7.5) -- (9.5,7.5);\\n    \\draw[dashed, yellow] (6.5,9.5) -- (9.5,9.5);\\n    \\draw[dashed, yellow] (0.5,4.5) -- (0.5,5.5);\\n    \\draw[dashed, yellow] (0.5,6.5) -- (0.5,7.5);\\n    \\draw[dashed, yellow] (1.5,5.5) -- (1.5,6.5);\\n    \\draw[dashed, yellow] (2.5,3.5) -- (2.5,4.5);\\n    \\draw[dashed, yellow] (4.5,2.5) -- (4.5,3.5);\\n    \\draw[dashed, yellow] (5.5,2.5) -- (5.5,3.5);\\n    \\draw[dashed, yellow] (6.5,3.5) -- (6.5,4.5);\\n    \\draw[dashed, yellow] (6.5,9.5) -- (6.5,10.5);\\n    \\draw[dashed, yellow] (7.5,4.5) -- (7.5,5.5);\\n    \\draw[dashed, yellow] (8.5,6.5) -- (8.5,7.5);\\n    \\draw[dashed, yellow] (9.5,5.5) -- (9.5,6.5);\\n    \\draw[dashed, yellow] (9.5,7.5) -- (9.5,9.5);\\n\\end{tikzpicture}\\n\\end{center}\\n\\vspace*{\\fill}\\n\\n\\end{document}\\n"
        }
    ]
}
